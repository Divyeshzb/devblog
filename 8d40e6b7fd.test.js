// Test generated by RoostGPT for test nodetest-nov using AI Type Azure Open AI and AI Model roost-gpt4-32k

const readline = require('readline');
const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

let createUser;

jest.mock('readline', () => {
  return {
    createInterface: jest.fn().mockReturnValue({
      question: jest.fn().mockImplementation((questionText, cb) => cb('test')),
      close: jest.fn()
    }),
  }
});

jest.mock('./create-user-cli', () => {
  createUser = jest.fn((name, email, password) => { return { name, email, password } });
  return createUser;
});

describe('Test cases for createUser', () => {
  let closeSpy;
  beforeAll(() => {
    require('./create-user-cli');
    closeSpy = jest.spyOn(rl, 'close');
  });

  test('call readline close after user creation', () => {
    expect(closeSpy).toHaveBeenCalled();
  });

  test('createUser is called with the proper parameters', () => {
    expect(createUser).toHaveBeenCalledWith('test', 'test', 'test');
  });
});
